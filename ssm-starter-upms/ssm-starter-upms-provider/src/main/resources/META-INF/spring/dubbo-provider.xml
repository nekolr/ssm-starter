<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
  http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- 检索包下的所有类型，并应用注解  -->
    <context:component-scan base-package="com.nekolr.upms"/>

    <!-- 定义应用的名称 -->
    <dubbo:application name="ssm-starter-provider"/>

    <!--
      - 使用广播机制进行服务注册与发现
      - 基于广播机制实现的服务注册与发现仅限于开发过程使用，因为其无需搭建和启动任何其他服务
      - 如果是生产环境请使用 Zookeeper 或 Redis
      -->
    <dubbo:registry address="multicast://224.5.6.7:1234"/>

    <!-- 定义 RPC 传输协议 -->
    <dubbo:protocol name="dubbo"/>

    <!--
      - 暴露 UserService 服务
      - 这里服务实现使用 ref 属性指定，属性值 userService 即为 UserServiceImpl 上的注解 @Service 中指定的 id
      -->
    <dubbo:service interface="com.nekolr.upms.api.rpc.UserService"
                   ref="userService" version="1.0"/>

    <!-- 暴露 AccountService 服务 -->
    <dubbo:service interface="com.nekolr.upms.api.rpc.AccountService"
                   ref="accountService" version="1.0"/>

</beans>
